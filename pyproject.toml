[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "swarm-browser"
version = "2.0.0"
description = "A comprehensive CLI-based agent for web browsing, automation, and AI-powered research"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Junxiao Guo", email = "junxiao.guo@example.com" }]
keywords = [
    "cli",
    "web-automation",
    "llm",
    "research",
    "browsing",
    "mcp",
    "playwright",
    "ai",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Testing",
    "Topic :: Text Processing :: Markup :: HTML",
]

dependencies = [
    "playwright>=1.52.0",
    "typer>=0.16.0",
    "rich>=14.0.0",
    "httpx[socks]>=0.28.1",
    "pydantic>=2.11.7",
    "beautifulsoup4>=4.13.4",
    "python-dotenv>=1.1.0",
    "fastmcp>=2.8.0",
    "ollama>=0.5.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "black>=25.1.0",
    "isort>=6.0.1",
    "flake8>=7.2.0",
    "mypy>=1.16.0",
    "ruff>=0.11.13",
]

[tool.hatch.build.targets.wheel]
packages = ["swarm"]

[project.scripts]
swarm = "swarm.cli.main:app"

[project.urls]
Homepage = "https://github.com/cyborgoat/swarm"
Repository = "https://github.com/cyborgoat/swarm"
Issues = "https://github.com/cyborgoat/swarm/issues"
Documentation = "https://github.com/cyborgoat/swarm#readme"

[tool.black]
line-length = 100
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E501"] # Ignore line length errors

[dependency-groups]
dev = ["pytest>=8.4.0", "pytest-asyncio>=1.0.0"]

[tool.ruff]
line-length = 120
target-version = "py310"
# Enable Pyflakes (F) and pycodestyle (E, W) error rules by default.
# 'I' enables isort's import sorting rules.
# Add more rule codes as you see fit.
lint.select = ["E", "F", "I", "W", "UP"]
lint.fixable = ["ALL"]
lint.ignore = []


[tool.ruff.format]
# Use black-compatible formatting.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.